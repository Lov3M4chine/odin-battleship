{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./src/index.js","webpack:///webpack/bootstrap","webpack:///webpack/before-startup","webpack:///webpack/startup","webpack:///webpack/after-startup"],"sourcesContent":["const ShipFactory = (length, name) => {\n  if (!Number.isInteger(length) || length < 1) {\n      throw new Error('Invalid ship length: must be a positive integer.');\n  }\n\n  if (typeof name !== 'string' || name.trim() === '') {\n      throw new Error('Invalid ship name: must be a non-empty string.');\n  }\n\n  let coordinates = [];\n  let hits = 0;\n\n  const hit = () => {\n    if (hits < length) {\n      hits += 1;\n    }\n  };\n\n  const getHits = () => hits;\n  const isSunk = () => hits >= length;\n\n  return {\n    hit,\n    getHits,\n    isSunk,\n    name,\n    coordinates\n  };\n};\n\nconst GameboardFactory = () => {\n  let ships = {};\n\n  function createGameboard(horizontalSize, verticalSize) {\n    // Error Checking\n    if ((!Number.isInteger(horizontalSize)) || (!Number.isInteger(verticalSize))) {\n      throw new Error('Horizontal and Vertical Size must be integers')\n    }\n    if ((horizontalSize < 8) || (verticalSize < 8)) {\n      throw new Error(\"Horizontal and Vertical Size must be at least 7\");\n    }\n\n    // Gameboard creation\n    let gameboard = [];\n\n    for (let i = 0; i < (horizontalSize * verticalSize); i++) {\n      gameboard.push({cell: i, isHit: false, isMiss: false, name: null})\n    }\n    return {\n      gameboard,\n      horizontalSize,\n      verticalSize\n    }\n  }\n\n  function placeShip(gameboardState, initialCell, isVertical, length, name) {\n    // Error Checking\n    if (!gameboardState.gameboard) {\n      throw new Error(\"a gameboardState must be passed\");\n    }\n    if (!Number.isInteger(initialCell)) {\n      throw new Error(\"initialCell must be an integer.\");\n    }\n    if (initialCell < 0) {\n      throw new Error(\"initialCell must be greater than or equal to zero. It represents the initial cell the ship starts on.\")\n    }\n    if (typeof isVertical !== \"boolean\") {\n      throw new Error(\"isVertical must be a boolean\");\n    }\n    if (!(isVertical) && (gameboardState.horizontalSize - (initialCell % gameboardState.horizontalSize)) < length) {\n      throw new Error(\"The length of the ship exceeds the gameboard's horizontal boundary, starting from the initial cell\");\n    }\n    if ((isVertical) && (gameboardState.verticalSize - Math.floor(initialCell / gameboardState.horizontalSize)) < length) {\n      throw new Error(\"The length of the ship exceeds the gameboard's vertical boundary, starting from the initial cell\");\n    }\n    if (isVertical) {\n      for (let i = initialCell; i < (initialCell + (length * gameboardState.horizontalSize)); i+=gameboardState.horizontalSize) {\n        if (gameboardState.gameboard[i].name !== null) {\n          throw new Error(\"Space is already occupied. Please choose another.\");\n        }\n      }\n    } else {\n      for (let i = initialCell; i < (initialCell + length); i+=1) {\n        if (gameboardState.gameboard[i].name !== null) {\n          throw new Error(\"Space is already occupied. Please choose another.\");\n        }\n      }\n    }\n\n    let newShip = ShipFactory(length, name);\n    ships[name] = newShip;\n    ships[name][length] = length;\n     \n\n    // Ship Placement\n    if (isVertical) {\n      for (let i = initialCell; i < (initialCell + (length * gameboardState.horizontalSize)); i+=gameboardState.horizontalSize) {\n        gameboardState.gameboard[i].name = name;\n        newShip.coordinates.push(i);\n      }\n      ships[name].coordinates = newShip.coordinates;\n\n    } else {\n      for (let i = initialCell; i < (initialCell + length); i+=1) {\n        gameboardState.gameboard[i].name = name;\n        newShip.coordinates.push(i);\n      }\n      ships[name].coordinates = newShip.coordinates;\n    }\n    return ships;\n  }\n\n  function receiveAttack(gameboardState, coordinate) {\n    if (gameboardState.gameboard[coordinate].name !== null) {\n      gameboardState.gameboard[coordinate].isHit = true;\n      ships[gameboardState.gameboard[coordinate].name].hit();\n    } else {\n      gameboardState.gameboard[coordinate].isMiss = true;\n    }\n  }\n\n  return {\n    createGameboard,\n    placeShip,\n    receiveAttack,\n    ships\n  };\n};\n\n// const gameboardFactory = GameboardFactory();\n// let gameboardState = gameboardFactory.createGameboard(10, 10);\n// gameboardFactory.placeShip(gameboardState, 0, false, 3, 'submarine');\n// // gameboardFactory.placeShip(gameboardState, 60, true, 3, 'submarine');\n// gameboardFactory.receiveAttack(gameboardState, 0);\n// console.log(gameboardFactory.ships['submarine'].coordinates);\n\n\nmodule.exports = { ShipFactory, GameboardFactory };\n\n\n  ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.js\");\n",""],"names":["ShipFactory","length","name","Number","isInteger","Error","trim","coordinates","hits","hit","getHits","isSunk","GameboardFactory","ships","createGameboard","horizontalSize","verticalSize","gameboard","i","push","cell","isHit","isMiss","placeShip","gameboardState","initialCell","isVertical","Math","floor","newShip","receiveAttack","coordinate","module","exports"],"sourceRoot":""}